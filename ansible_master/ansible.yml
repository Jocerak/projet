- name: D√©ploiement initial avec g√©n√©ration de cl√© et distribution
  hosts: localhost
  gather_facts: no
  vars:
    master_group: "Master"
    ssh_private_key_path: "~/.ssh/id_rsa_master"
    ssh_public_key_path: "~/.ssh/id_rsa_master.pub"
    remote_task_dir: "/home/ubuntu/task"

  tasks:

    - name: üî∑ √âtape 1 : R√©cup√©rer l'IP publique du Master depuis hosts.ini
      shell: |
        awk '/\[{{ master_group }}\]/{flag=1; next} /^\[/{flag=0} flag && /ansible_host=/' hosts.ini \
        | head -n 1 | sed -n 's/.*ansible_host=\([^ ]*\).*/\1/p'
      register: master_ip_result
      changed_when: false

    - name: ‚úÖ V√©rifier que l'IP du Master a √©t√© r√©cup√©r√©e
      fail:
        msg: "‚ùå Impossible d'extraire l'IP publique du Master."
      when: master_ip_result.stdout == ""

    - set_fact:
        master_ip: "{{ master_ip_result.stdout }}"

    - name: üî∑ √âtape 2 : Cr√©er le dossier ~/task sur le Master
      shell: ssh ubuntu@{{ master_ip }} "mkdir -p {{ remote_task_dir }}"
      delegate_to: localhost

    - name: üî∑ √âtape 2.5 : G√©n√©rer une paire de cl√©s SSH sur le Master (si absente)
      shell: |
        ssh ubuntu@{{ master_ip }} '
        if [[ ! -f ~/.ssh/id_rsa ]]; then
          ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/id_rsa
        else
          echo "Cl√© SSH d√©j√† existante"
        fi'
      delegate_to: localhost

    - name: üî∑ √âtape 2.6 : R√©cup√©ration de la cl√© priv√©e/public du Master
      block:
        - name: üì• R√©cup√©rer la cl√© priv√©e
          shell: scp ubuntu@{{ master_ip }}:~/.ssh/id_rsa {{ ssh_private_key_path }}
          delegate_to: localhost

        - name: üì• R√©cup√©rer la cl√© publique
          shell: scp ubuntu@{{ master_ip }}:~/.ssh/id_rsa.pub {{ ssh_public_key_path }}
          delegate_to: localhost

        - name: üîí Donner les bons droits √† la cl√© priv√©e
          file:
            path: "{{ ssh_private_key_path }}"
            mode: '0600'
          delegate_to: localhost

    - name: üî∑ √âtape 3 : Cr√©er le dossier application sur le Master
      shell: ssh ubuntu@{{ master_ip }} "mkdir -p {{ remote_task_dir }}/application"
      delegate_to: localhost

    - name: üî∑ √âtape 3.1 : Copier les fichiers hosts.ini et ansible.yml vers le Master
      shell: scp hosts.ini ansible.yml ubuntu@{{ master_ip }}:{{ remote_task_dir }}
      delegate_to: localhost

    - name: üî∑ √âtape 3.2 : Copier le dossier application/ vers le Master
      shell: scp -r application/* ubuntu@{{ master_ip }}:{{ remote_task_dir }}/application/
      delegate_to: localhost

    - name: üî∑ √âtape 4 : Distribution de la cl√© publique du Master vers tous les h√¥tes
      shell: |
        ip=$(echo "{{ item }}" | sed -n 's/.*ansible_host=\([^ ]*\).*/\1/p')
        user=$(echo "{{ item }}" | sed -n 's/.*ansible_user=\([^ ]*\).*/\1/p')
        user=${user:-ubuntu}
        if [[ -n "$ip" ]]; then
          ssh-copy-id -i {{ ssh_public_key_path }} -o StrictHostKeyChecking=no "$user@$ip" || echo "‚ùå √âchec pour $ip"
        fi
      with_lines: cat hosts.ini
      delegate_to: localhost

    - name: üî∑ √âtape 5 : Installation d'Ansible sur le Master (si manquant)
      shell: |
        ssh ubuntu@{{ master_ip }} '
        if ! command -v ansible-playbook >/dev/null; then
          sudo apt update -qq
          sudo apt install -yqq software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install -yqq ansible
        else
          echo "‚úÖ Ansible d√©j√† install√©"
        fi'
      delegate_to: localhost

    - name: üßπ √âtape 6 : Nettoyage des cl√©s SSH r√©cup√©r√©es
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ ssh_private_key_path }}"
        - "{{ ssh_public_key_path }}"
      delegate_to: localhost
