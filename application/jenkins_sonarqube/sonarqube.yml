- name: Déploiement SonarQube avec Docker
  hosts: Pipeline
  become: true
  vars:
    sonarqube_version: "10.4.1-community"
    postgres_version: "15"
    sonarqube_db_password: "dbqube"

  tasks:
    # Configuration système requise pour ElasticSearch
    - name: Configurer vm.max_map_count
      ansible.posix.sysctl:
        name: vm.max_map_count
        value: '262144'
        sysctl_set: yes

    # Création des volumes persistants
    - name: Créer volume pour SonarQube
      community.docker.docker_volume:
        name: sonarqube_data

    - name: Créer volume pour PostgreSQL
      community.docker.docker_volume:
        name: postgres_data

    # Déploiement PostgreSQL
    - name: Lancer conteneur PostgreSQL
      community.docker.docker_container:
        name: sonarqube_db
        image: "postgres:{{ postgres_version }}"
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: "{{ sonarqube_db_password }}"
        volumes:
          - postgres_data:/var/lib/postgresql/data
        restart_policy: unless-stopped

    # Déploiement SonarQube
    - name: Lancer conteneur SonarQube
      community.docker.docker_container:
        name: sonarqube
        image: "sonarqube:{{ sonarqube_version }}"
        ports:
          - "9000:9000"
        env:
          SONAR_JDBC_URL: "jdbc:postgresql://sonarqube_db:5432/sonar"
          SONAR_JDBC_USERNAME: sonar
          SONAR_JDBC_PASSWORD: "{{ sonarqube_db_password }}"
        volumes:
          - sonarqube_data:/opt/sonarqube/data
          - sonarqube_extensions:/opt/sonarqube/extensions
        links:
          - sonarqube_db
        restart_policy: unless-stopped
